{"version":3,"file":"static/js/6.b7e6fde9.chunk.js","mappings":"kPAeA,EATmB,SAACA,GAClB,IAAIC,EAAO,aAAeD,EAAME,GAChC,OACE,gBAAKC,UAAU,SAAf,UACE,SAAC,KAAD,CAASC,GAAIH,EAAME,UAAU,eAA7B,SAA6CH,EAAMK,UCDzD,EANgB,SAACL,GACf,OACE,gBAAKG,UAAU,UAAf,SAA0BH,EAAMM,W,uCCgClC,IAAIC,GAAeC,EAAAA,EAAAA,GAAiB,KAE9BC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAOF,OAPEA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WACE,OACE,kBAAMC,SAAUC,KAAKX,MAAMY,aAAcT,UAAU,sBAAnD,WACE,SAACU,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAeR,GAAeS,UAAWC,EAAAA,EAAaC,SAAU,WAAWb,KAAM,UAAWc,KAAM,OAAQC,YAAY,2BACxI,4CAEJ,EAPEX,CAAuBY,EAAAA,WAUvBC,GAAsBC,EAAAA,EAAAA,GAAU,CACpCC,KAAM,cADoBD,CAEzBd,GAEL,EA3CA,SAAkBT,GAEhB,IAIMyB,EAAiBzB,EAAM0B,aAAaC,YACnBC,KAAI,SAACC,GAAD,OAAU,SAAC,EAAD,CAA0BxB,KAAMwB,EAAKxB,KAAMH,GAAI2B,EAAK3B,IAAnC2B,EAAK3B,OAErD4B,EAAkB9B,EAAM0B,aAAaA,aACpBE,KAAI,SAACtB,GAAD,OAAa,SAAC,EAAD,CAASA,QAASA,EAAQA,aAGlE,OACE,qBAASH,UAAU,yBAAnB,WACE,gBAAKA,UAAU,UAAf,SACGsB,KAEH,iBAAKtB,UAAU,SAAf,WACE,gBAAKA,UAAU,iBAAf,SACG2B,KAEH,SAACR,EAAD,CAAqBZ,SApBP,SAACqB,GACnB/B,EAAMgC,YAAYD,EAASzB,mB,oBCLzB2B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAMH,OANGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAEJ,WACE,OAAO,SAAC,EAAD,CAAWP,aAAcf,KAAKX,MAAM0B,aACzBM,YAAarB,KAAKX,MAAMgC,YACxBE,OAAQvB,KAAKX,MAAMkC,aACtC,EANGD,CAA0BZ,EAAAA,WAwBhC,GAAec,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAACC,GACrB,MAAO,CACLX,aAAcW,EAAMX,iBAIC,SAACY,GACxB,MAAO,CACLN,YAAa,SAACO,GACZD,GAASE,EAAAA,EAAAA,GAAyBD,SAOtCE,EAAAA,EAFF,CAGGR","sources":["components/Main/Content/Messages/DialogItem/DialogItem.jsx","components/Main/Content/Messages/Message/Message.jsx","components/Main/Content/Messages/Messages.jsx","components/Main/Content/Messages/MessagesContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './DialogItem.css';\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/messages/\" + props.id\r\n  return (\r\n    <div className=\"dialog\">\r\n      <NavLink to={path} className=\"dialog__link\">{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport './Message.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className=\"message\">{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport './Messages.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport { FormControl } from '../../../common/FormControls/FormControls';\r\nimport { MaxLengthCreator, requiredField } from '../../../../utilities/validators/validators';\r\n\r\n\r\nfunction Messages(props) {\r\n\r\n  let addNewMessage = (formData) => {\r\n    props.sendMessage(formData.message)\r\n  }\r\n  \r\n  const dialogElements = props.dataMessages.dataDialogs\r\n                        .map((user) => <DialogItem key={user.id} name={user.name} id={user.id}/>)\r\n\r\n  const messageElements = props.dataMessages.dataMessages\r\n                        .map((message) => <Message message={message.message}/>)\r\n  \r\n  \r\n  return (\r\n    <section className='App__messages messages'>\r\n      <div className=\"dialogs\">\r\n        {dialogElements}\r\n      </div>\r\n      <div className=\"dialog\">\r\n        <div className='dialog__window'>\r\n          {messageElements}\r\n        </div>\r\n        <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </section>\r\n  )}\r\n  \r\n  let maxLength100 = MaxLengthCreator(100);\r\n\r\n  class AddMessageForm extends React.Component {\r\n    render(){\r\n      return (\r\n        <form onSubmit={this.props.handleSubmit} className='dialog__sendMessage'>\r\n          <Field validate={[requiredField, maxLength100]} component={FormControl} formType={'textarea'}name={'message'} type={'text'} placeholder='Enter your message...'></Field>\r\n          <button>Send</button>\r\n        </form>\r\n    )}\r\n  }\r\n\r\n  const AddMessageReduxForm = reduxForm({\r\n    form: 'addMessage'\r\n  })(AddMessageForm)\r\n\r\nexport default Messages;","import { connect } from 'react-redux';\r\nimport { sendMessageActionCreator } from '../../../../redux/dialogsReducer';\r\nimport Messages from './Messages';\r\nimport React from 'react';\r\nimport { ConnectedWithAuthRedirect } from '../../../../hoc/connectedWithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n  render() {\r\n    return <Messages  dataMessages={this.props.dataMessages}\r\n                      sendMessage={this.props.sendMessage}\r\n                      isAuth={this.props.isAuth}/>\r\n  }\r\n}\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dataMessages: state.dataMessages,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessage) => {\r\n      dispatch(sendMessageActionCreator(newMessage))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  ConnectedWithAuthRedirect)\r\n  (MessagesContainer)\r\n\r\n\r\n "],"names":["props","path","id","className","to","name","message","maxLength100","MaxLengthCreator","AddMessageForm","onSubmit","this","handleSubmit","Field","validate","requiredField","component","FormControl","formType","type","placeholder","React","AddMessageReduxForm","reduxForm","form","dialogElements","dataMessages","dataDialogs","map","user","messageElements","formData","sendMessage","MessagesContainer","isAuth","compose","connect","state","dispatch","newMessage","sendMessageActionCreator","ConnectedWithAuthRedirect"],"sourceRoot":""}