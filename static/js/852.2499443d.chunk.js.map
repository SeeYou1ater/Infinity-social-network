{"version":3,"file":"static/js/852.2499443d.chunk.js","mappings":"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","sources":["components/Main/Content/Profile/Description/Status/StatusWithHooks.jsx","components/Main/Content/Profile/Description/AboutMe/Contactitem/ContactItem.jsx","components/Main/Content/Profile/Description/AboutMe/AboutMe.jsx","components/Main/Content/Profile/Description/AboutMe/AboutMeEditForm/AboutMeEditForm.jsx","components/Main/Content/Profile/Description/Description.jsx","components/Main/Content/Profile/MyPosts/Post/Post.jsx","components/Main/Content/Profile/MyPosts/MyPosts.jsx","components/Main/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Main/Content/Profile/Profile.jsx","components/Main/Content/Profile/ProfileContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './Status.css';\r\n\r\n\r\nfunction ProfileStatusWithHooks(props) {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => { \r\n    setStatus(props.status); \r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status) \r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className='App__status-wrapper'>\r\n      {!editMode ?\r\n      <div className='App__profileStatus'>\r\n        <span onDoubleClick={ activateEditMode }>{ props.status || 'No status' }</span>\r\n        <button onClick={ activateEditMode }>Change</button>\r\n      </div> :\r\n      <div className='status-input'>\r\n        <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={ status }/> \r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport './ContactItem.css';\r\n\r\n\r\nfunction ContactItem (props) {\r\n  return (\r\n    <p>{props.contactTitle}: {props.contactValue}</p>\r\n  )\r\n} \r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport './AboutMe.css';\r\nimport ContactItem from './Contactitem/ContactItem';\r\n\r\nfunction AboutMe(props) {\r\n  return (\r\n    <div className='App__description-aboutMeform'>\r\n      { props.isOwner && <button onClick={props.activateProfileEditMode}>Edit profile</button> }\r\n      <div className='App__description-aboutMe-list'>\r\n        <div>\r\n          <h3>Full name: {props.profile.fullName}</h3>\r\n        </div >\r\n        <div>\r\n          <h3><b>Contacts:</b></h3>\r\n          <div className='App__contacts-list'>\r\n            { Object.keys(props.profile.contacts).map( key => { return <ContactItem key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>}) }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3><b>Looking for a job:</b>{props.profile.lookingForAJob ? 'yes' : 'no'}</h3> \r\n        </div>\r\n        <div>\r\n          <h3><b>About me:</b></h3>{props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n          <h3><b>My proffesional skills:</b></h3>{props.profile.lookingForAJobDescription}\r\n        </div>   \r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutMe;","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\";\r\nimport { FormControl } from \"../../../../../../common/FormControls/FormControls\";\r\nimport ContactItem from \"../Contactitem/ContactItem\";\r\nimport './AboutMeEditForm.css';\r\n\r\n\r\nfunction AboutMeEditForm(props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <button>Save</button>\r\n      {props.error && <div className=\"stopSubmit-error\">{props.error}</div> }\r\n      <div>\r\n        <div>\r\n          <h3>Full name:</h3>\r\n          <Field className='App__editModeProfileForm-fullName-input' component={FormControl} validators={[]} formType={'input'} type=\"text\" name={'fullName'} placeholder={\"Full name\"}/>\r\n        </div >\r\n        <div>\r\n          <h3><b>Contacts:</b></h3>\r\n          <div>\r\n            { Object.keys(props.profile.contacts).map( key => { return <div>{key}:<Field className=\"App__editMode-contact-input\" key={key} component={FormControl} validators={[]} formType={'input'} type=\"text\" name={'contacts.' + key} placeholder={key}/></div>}) }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3><b>Looking for a job:</b></h3>\r\n          <Field className='App__editModeProfileForm-lookingForAJob-input' component={FormControl} validators={[]} formType={'input'} type=\"checkbox\" name={'lookingForAJob'}/> \r\n        </div>\r\n        <div>\r\n          <h3><b>About me:</b></h3>\r\n          <Field className='App__editModeProfileForm-aboutMe-input' component={FormControl} validators={[]} formType={'textarea'} type=\"text\" name={'aboutMe'} placeholder={\"You can write something here about yourself...\"}/>\r\n        </div>\r\n        <div>\r\n          <h3><b>My professional skills:</b></h3>\r\n          <Field className='App__editModeProfileForm-lookingForAJobDescription-input' component={FormControl} validators={[]} formType={'textarea'} type=\"text\" name={'lookingForAJobDescription'} placeholder={\"You can write something here about your professional skills...\"}/>\r\n        </div>   \r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AboutMeEditReduxForm = reduxForm({\r\n  form: 'AboutMeEditForm'\r\n})(AboutMeEditForm)\r\n\r\nexport default AboutMeEditReduxForm;","import React, { useState } from 'react';\r\nimport './Description.css';\r\nimport noPhoto from './../../../../../assets/images/no-photo.jpg';\r\nimport ProfileStatusWithHooks from './Status/StatusWithHooks';\r\nimport AboutMe from './AboutMe/AboutMe';\r\nimport AboutMeEditForm from './AboutMe/AboutMeEditForm/AboutMeEditForm';\r\n\r\nfunction Description(props) {\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const activateProfileEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const onSubmit = (editDataAboutMe) => {\r\n    props.saveProfile(editDataAboutMe).then( () => {\r\n      setEditMode(false)\r\n    })\r\n  }\r\n\r\n  return (   \r\n      <>\r\n        <img className='photo' src={props.profile.photos.large || noPhoto} alt=\"#\" />\r\n        { props.isOwner && <input type='file' onChange={onMainPhotoSelected} /> }\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        { editMode ? <AboutMeEditForm initialValues={props.profile} onSubmit={onSubmit} isOwner={props.isOwner} profile={props.profile}/> : <AboutMe activateProfileEditMode={activateProfileEditMode} isOwner={props.isOwner} profile={props.profile}/>}\r\n      </>\r\n  )}\r\n\r\nexport default Description;","import React from 'react';\r\nimport './Post.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div> \r\n      <div className='post'>{props.message}</div>\r\n      <div className='likes'>Likes {props.likes}</div>\r\n    </div> \r\n  )}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { MaxLengthCreator, requiredField } from '../../../../../utilities/validators/validators';\r\nimport { FormControl } from '../../../../common/FormControls/FormControls';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\n\r\nfunction MyPosts(props) {\r\n\r\n  const postsItems = props.posts.map((post) => <Post key={post.id} message={post.message} likes = {post.likes}/>)\r\n\r\n  let addPost = (dataFormMessage) => {\r\n    props.addPost(dataFormMessage.post)\r\n  }\r\n\r\n  return (\r\n    <div className='App__posts-info'>\r\n      <div className='App__posts-form'>\r\n        <h3>My posts</h3>    \r\n        <NewPostReduxForm onSubmit={addPost}/>\r\n      </div>\r\n      <div className='App__post-items'>\r\n        {postsItems}\r\n      </div>\r\n    </div> \r\n  )}\r\n\r\n  const maxLength10 = MaxLengthCreator(10)\r\n\r\n  class NewPostForm extends React.Component {\r\n    render() {\r\n      return (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <Field validate={[requiredField, maxLength10]} placeholder={'Enter!'} component={FormControl} formType={'textarea'} type={\"text\"} name={'post'}/>\r\n          <button>Add post</button>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\n  const NewPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n  })(NewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { newPostActionCreator } from '../../../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nclass MyPostsContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <MyPosts  posts={this.props.posts} \r\n                  addPost={this.props.addPost}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n  let mapStateToProps = (state) => {\r\n    return {\r\n      posts: state.dataProfile.dataPosts\r\n    }\r\n  }\r\n  \r\n  let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      addPost: (newPost) => {\r\n        dispatch(newPostActionCreator(newPost))\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);\r\n\r\n ","import React from 'react';\r\nimport './Profile.css';\r\nimport Description from './Description/Description';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nfunction Profile(props) {\r\n  if (!props.dataProfile.profile) {\r\n    return <Preloader/>\r\n  }\r\n  \r\n  return (\r\n    <div className='App__profile'>\r\n      <Description saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.dataProfile.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer   dataProfile = {props.dataProfile}/> \r\n      </div>\r\n  )}\r\n  \r\nexport default Profile;","import React from 'react';\r\nimport './Profile.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { savePhotoThunkCreator, saveProfileThunkCreator, setUserProfileThunkCreator, setUserStatusThunkCreator, updateStatusThunkCreator } from '../../../../redux/profileReducer';\r\nimport { withRouter } from '../../../../hoc/withRouter';\r\nimport { compose } from 'redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshPage() {\r\n    let profileId = this.props.router.params.profileId;\r\n    if (!profileId) {\r\n      profileId = this.props.authorizedUserId;\r\n    }\r\n    this.props.setUserProfile(profileId)\r\n    this.props.setUserStatus(profileId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshPage()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.router.params.profileId !== this.props.router.params.profileId) {\r\n      this.refreshPage()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if (this.props.authorizedUserId === null) { return <Navigate to='/login'/> }\r\n    return (\r\n    <div className='App__profile'>\r\n      <Profile  saveProfile={this.props.saveProfile}\r\n                dataProfile = {this.props.dataProfile}\r\n                isOwner={Number(this.props.router.params.profileId) === this.props.authorizedUserId}\r\n                savePhoto={this.props.savePhoto}\r\n                isAuth={this.props.isAuth}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}/>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nlet mapStateToProps = (state) => ({\r\n  dataProfile: state.dataProfile,\r\n  status: state.dataProfile.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n  setUserProfile: (profileId) => {\r\n    dispatch(setUserProfileThunkCreator(profileId))\r\n  },\r\n  setUserStatus: (profileId) => {\r\n    dispatch(setUserStatusThunkCreator(profileId))\r\n  },\r\n  updateStatus: (status) => {\r\n    dispatch(updateStatusThunkCreator(status))\r\n  },\r\n  savePhoto: (filePhoto) => {\r\n    dispatch(savePhotoThunkCreator(filePhoto))\r\n  },\r\n  saveProfile: (editDataAboutMe) => {\r\n    return dispatch(saveProfileThunkCreator(editDataAboutMe))\r\n  }\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter)\r\n  (ProfileContainer)"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","className","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","onClick","contactTitle","contactValue","isOwner","activateProfileEditMode","profile","fullName","Object","keys","contacts","map","key","lookingForAJob","aboutMe","lookingForAJobDescription","reduxForm","form","onSubmit","handleSubmit","error","Field","component","FormControl","validators","formType","type","name","placeholder","src","photos","large","noPhoto","alt","target","files","length","savePhoto","initialValues","editDataAboutMe","saveProfile","then","message","likes","maxLength10","MaxLengthCreator","NewPostForm","this","validate","requiredField","React","NewPostReduxForm","postsItems","posts","post","id","dataFormMessage","addPost","MyPostsContainer","connect","state","dataProfile","dataPosts","dispatch","newPost","newPostActionCreator","Preloader","ProfileContainer","profileId","router","params","authorizedUserId","setUserProfile","setUserStatus","refreshPage","prevProps","prevState","snapshot","to","Number","isAuth","compose","auth","setUserProfileThunkCreator","setUserStatusThunkCreator","updateStatusThunkCreator","filePhoto","savePhotoThunkCreator","saveProfileThunkCreator","withRouter"],"sourceRoot":""}