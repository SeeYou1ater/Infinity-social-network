{"version":3,"file":"static/js/744.d4b025a7.chunk.js","mappings":"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","sources":["components/Main/Content/Profile/Description/Status/StatusWithHooks.jsx","components/Main/Content/Profile/Description/Description.jsx","components/Main/Content/Profile/MyPosts/Post/Post.jsx","components/Main/Content/Profile/MyPosts/MyPosts.jsx","components/Main/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Main/Content/Profile/Profile.jsx","components/Main/Content/Profile/ProfileContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction ProfileStatusWithHooks(props) {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => { \r\n    setStatus(props.status); \r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status) \r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className='status-wrapper'>\r\n      {!editMode ?\r\n      <div className='status'>\r\n        <span onDoubleClick={ activateEditMode }>{ props.status || 'No status' }</span>\r\n        <button onClick={ activateEditMode }>Change</button>\r\n      </div> :\r\n      <div className='status-input'>\r\n        <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={ status }/> \r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport './Description.css';\r\nimport noPhoto from './../../../../../assets/images/no-photo.jpg';\r\nimport ProfileStatusWithHooks from './Status/StatusWithHooks';\r\n\r\nfunction Description(props) {\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n  return (   \r\n      <>\r\n        <img className='photo' src={props.profile.photos.large || noPhoto} alt=\"#\" />\r\n        { props.isOwner && <input type='file' onChange={onMainPhotoSelected} /> }\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        <div className='profile-description'>Какое то описание профиля</div>\r\n      </>\r\n  )}\r\n\r\nexport default Description;","import React from 'react';\r\nimport './Post.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div> \r\n      <div className='post'>{props.message}</div>\r\n      <div className='likes'>Likes {props.likes}</div>\r\n    </div> \r\n  )}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { MaxLengthCreator, requiredField } from '../../../../../utilities/validators/validators';\r\nimport { FormControl } from '../../../../common/FormControls/FormControls';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\n\r\nfunction MyPosts(props) {\r\n\r\n  const postsItems = props.posts.map((post) => <Post message={post.message} likes = {post.likes}/>)\r\n\r\n  let addPost = (dataFormMessage) => {\r\n    props.addPost(dataFormMessage.post)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='posts'>\r\n        My posts\r\n        <NewPostReduxForm onSubmit={addPost}/>\r\n      </div>\r\n      {postsItems}\r\n    </div> \r\n  )}\r\n\r\n  const maxLength10 = MaxLengthCreator(10)\r\n\r\n  class NewPostForm extends React.Component {\r\n    render() {\r\n      return (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <Field validate={[requiredField, maxLength10]} placeholder={'Enter!'} component={FormControl} formType={'textarea'} type={\"text\"} name={'post'}/>\r\n          <button>Add post</button>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\n  const NewPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n  })(NewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { newPostActionCreator } from '../../../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nclass MyPostsContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyPosts  posts={this.props.posts} \r\n                  addPost={this.props.addPost}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n  let mapStateToProps = (state) => {\r\n    return {\r\n      posts: state.dataProfile.dataPosts\r\n    }\r\n  }\r\n  \r\n  let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      addPost: (newPost) => {\r\n        dispatch(newPostActionCreator(newPost))\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);\r\n\r\n ","import React from 'react';\r\nimport './Profile.css';\r\nimport Description from './Description/Description';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nfunction Profile(props) {\r\n  if (!props.dataProfile.profile) {\r\n    return <Preloader/>\r\n  }\r\n  \r\n  return (\r\n    <div className='App__profile'>\r\n      <Description savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.dataProfile.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer   dataProfile = {props.dataProfile}/> \r\n      </div>\r\n  )}\r\n  \r\nexport default Profile;","import React from 'react';\r\nimport './Profile.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { savePhotoThunkCreator, setUserProfileThunkCreator, setUserStatusThunkCreator, updateStatusThunkCreator } from '../../../../redux/profileReducer';\r\nimport { withRouter } from '../../../../hoc/withRouter';\r\nimport { compose } from 'redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshPage() {\r\n    let profileId = this.props.router.params.profileId;\r\n    if (!profileId) {\r\n      profileId = this.props.authorizedUserId;\r\n    }\r\n    this.props.setUserProfile(profileId)\r\n    this.props.setUserStatus(profileId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshPage()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.router.params.profileId !== this.props.router.params.profileId) {\r\n      this.refreshPage()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if (this.props.authorizedUserId === null) { return <Navigate to='/login'/> }\r\n    return (\r\n    <div className='App__profile'>\r\n      <Profile  dataProfile = {this.props.dataProfile}\r\n                isOwner={Number(this.props.router.params.profileId) === this.props.authorizedUserId}\r\n                savePhoto={this.props.savePhoto}\r\n                isAuth={this.props.isAuth}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}/>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nlet mapStateToProps = (state) => ({\r\n  dataProfile: state.dataProfile,\r\n  status: state.dataProfile.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n  setUserProfile: (profileId) => {\r\n    dispatch(setUserProfileThunkCreator(profileId))\r\n  },\r\n  setUserStatus: (profileId) => {\r\n    dispatch(setUserStatusThunkCreator(profileId))\r\n  },\r\n  updateStatus: (status) => {\r\n    dispatch(updateStatusThunkCreator(status))\r\n  },\r\n  savePhoto: (filePhoto) => {\r\n    dispatch(savePhotoThunkCreator(filePhoto))\r\n  }\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter)\r\n  (ProfileContainer)"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","className","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","onClick","src","profile","photos","large","noPhoto","alt","isOwner","type","target","files","length","savePhoto","message","likes","maxLength10","MaxLengthCreator","NewPostForm","onSubmit","this","handleSubmit","Field","validate","requiredField","placeholder","component","FormControl","formType","name","React","NewPostReduxForm","reduxForm","form","postsItems","posts","map","post","dataFormMessage","addPost","MyPostsContainer","connect","state","dataProfile","dataPosts","dispatch","newPost","newPostActionCreator","Preloader","ProfileContainer","profileId","router","params","authorizedUserId","setUserProfile","setUserStatus","refreshPage","prevProps","prevState","snapshot","to","Number","isAuth","compose","auth","id","setUserProfileThunkCreator","setUserStatusThunkCreator","updateStatusThunkCreator","filePhoto","savePhotoThunkCreator","withRouter"],"sourceRoot":""}