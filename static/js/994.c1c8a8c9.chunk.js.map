{"version":3,"file":"static/js/994.c1c8a8c9.chunk.js","mappings":"mPA0CA,MAtCA,SAAuBA,GAErB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAW,WACTD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAEV,IAAMG,EAAmB,WACvBJ,GAAY,IAYd,OACE,gBAAKK,UAAU,sBAAf,SACIN,GAMF,gBAAKM,UAAU,eAAf,UACE,kBAAOC,SAbU,SAACC,GACtBL,EAAUK,EAAEC,cAAcC,QAYaC,WAAW,EAAMC,OAlB/B,WACzBX,GAAY,GACZH,EAAMe,aAAaX,IAgBmEQ,MAAQR,OAN5F,iBAAKI,UAAU,qBAAf,UACIR,EAAMgB,SAAU,iBAAMC,cAAgBV,EAAtB,SAA2CP,EAAMI,QAAU,eAC7E,0BAAQJ,EAAMI,QAAU,cACtBJ,EAAMgB,UAAW,mBAAQE,QAAUX,EAAlB,0BCtB3B,MANA,SAAsBP,GACpB,OACE,yBAAIA,EAAMmB,aAAV,KAA0BnB,EAAMoB,iBC2BpC,MA3BA,SAAiBpB,GACf,OACE,iBAAKQ,UAAU,+BAAf,WACE,eAAIA,UAAU,uBAAd,SAAsCR,EAAMqB,QAAQC,YACpD,SAAC,EAAD,CAAeN,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQW,aAAcf,EAAMe,gBACjF,iBAAKP,UAAU,gCAAf,WACE,4BACE,cAAGA,UAAU,8BAAb,UAA2C,uCACzCR,EAAMgB,UAAW,SAAC,KAAD,CAASO,GAAG,YAAZ,UAAwB,cAAGf,UAAU,+BAAb,6BAC3C,gBAAKA,UAAU,qBAAf,SACIgB,OAAOC,KAAKzB,EAAMqB,QAAQK,UAAUC,KAAK,SAAAC,GAAS,OAAO,SAAC,EAAD,CAAuBT,aAAcS,EAAKR,aAAcpB,EAAMqB,QAAQK,SAASE,IAA7DA,YAGjF,0BACE,0BAAG,8CAA0B5B,EAAMqB,QAAQQ,eAAiB,MAAQ,WAEtE,4BACE,wBAAG,uCAAqB7B,EAAMqB,QAAQS,YAExC,4BACE,wBAAG,qDAAmC9B,EAAMqB,QAAQU,oCCN9D,MAhBA,SAAqB/B,GAQnB,OACI,iCACE,gBAAKQ,UAAU,QAAQwB,IAAKhC,EAAMqB,QAAQY,OAAOC,OAASC,EAASC,IAAI,MACtEpC,EAAMgB,UAAW,kBAAOR,UAAU,oBAAoB6B,KAAK,OAAO5B,SAT7C,SAACC,GACvBA,EAAE4B,OAAOC,MAAMC,QACjBxC,EAAMyC,UAAU/B,EAAE4B,OAAOC,MAAM,QAQ7B,SAAC,EAAD,CAASvB,QAAShB,EAAMgB,QAASK,QAASrB,EAAMqB,c,2DCLxD,MARA,SAAcrB,GACZ,OACE,4BACE,gBAAKQ,UAAU,OAAf,SAAuBR,EAAM0C,WAC7B,iBAAKlC,UAAU,QAAf,mBAA8BR,EAAM2C,aCqBxC,IAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAE/BC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAQH,OARGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WACE,OACE,kBAAMC,SAAUC,KAAKhD,MAAMiD,aAA3B,WACE,SAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAeR,GAAcS,YAAa,SAAUC,UAAWC,EAAAA,EAAaC,SAAU,WAAYnB,KAAM,OAAQoB,KAAM,UACxI,gDAGL,EARGX,CAAoBY,EAAAA,WAWpBC,GAAmBC,EAAAA,EAAAA,GAAU,CACjCC,KAAM,WADiBD,CAEtBd,GAEL,EArCA,SAAiB9C,GAEf,IAAM8D,EAAa9D,EAAM+D,MAAMpC,KAAI,SAACqC,GAAD,OAAU,SAAC,EAAD,CAAoBtB,QAASsB,EAAKtB,QAASC,MAASqB,EAAKrB,OAA9CqB,EAAKC,OAM7D,OACE,iBAAKzD,UAAU,kBAAf,WACE,iBAAKA,UAAU,kBAAf,WACE,sCACA,SAACmD,EAAD,CAAkBZ,SARV,SAACmB,GACblE,EAAMmE,QAAQD,EAAgBF,aAS5B,gBAAKxD,UAAU,kBAAf,SACGsD,QClBHM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAQH,OARGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WACE,OACE,+BACE,SAAC,EAAD,CAAUL,MAAOf,KAAKhD,MAAM+D,MAClBI,QAASnB,KAAKhD,MAAMmE,gBAGnC,EARGC,CAAyBV,EAAAA,WA0B/B,GAAeW,EAAAA,EAAAA,KAfS,SAACC,GACrB,MAAO,CACLP,MAAOO,EAAMC,YAAYC,cAIJ,SAACC,GACxB,MAAO,CACLN,QAAS,SAACO,GACRD,GAASE,EAAAA,EAAAA,IAAqBD,QAMtC,CAA4DN,G,SCb5D,MAZA,SAAiBpE,GACf,OAAKA,EAAMuE,YAAYlD,SAKrB,iCACE,SAAC,EAAD,CAAauD,YAAa5E,EAAM4E,YAAanC,UAAWzC,EAAMyC,UAAWzB,QAAShB,EAAMgB,QAASK,QAASrB,EAAMuE,YAAYlD,QAASjB,OAAQJ,EAAMI,OAAQW,aAAcf,EAAMe,gBAC/K,SAAC,EAAD,CAAoBwD,YAAevE,EAAMuE,kBANpC,SAACM,EAAA,EAAD,K,8BCGLC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAgCH,OAhCGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,cAAAA,MACJ,WACE,IAAIC,EAAY/B,KAAKhD,MAAMgF,OAAOC,OAAOF,UACpCA,IACHA,EAAY/B,KAAKhD,MAAMkF,kBAEzBlC,KAAKhD,MAAMmF,eAAeJ,GAC1B/B,KAAKhD,MAAMoF,cAAcL,KAC1B,+BAED,WACE/B,KAAKqC,gBACN,gCAED,SAAmBC,GACbA,EAAUN,OAAOC,OAAOF,YAAc/B,KAAKhD,MAAMgF,OAAOC,OAAOF,WACjE/B,KAAKqC,gBAER,oBAED,WACE,OAAoC,OAAhCrC,KAAKhD,MAAMkF,kBAAoC,SAAC,KAAD,CAAU3D,GAAG,YAEhE,gBAAKf,UAAU,eAAf,UACE,SAAC,EAAD,CAAU+D,YAAevB,KAAKhD,MAAMuE,YAC1BvD,QAASuE,OAAOvC,KAAKhD,MAAMgF,OAAOC,OAAOF,aAAe/B,KAAKhD,MAAMkF,iBACnEzC,UAAWO,KAAKhD,MAAMyC,UACtB+C,OAAQxC,KAAKhD,MAAMwF,OACnBpF,OAAQ4C,KAAKhD,MAAMI,OACnBW,aAAciC,KAAKhD,MAAMe,qBAGtC,EAhCG+D,CAAyBpB,EAAAA,WA2D/B,GAAe+B,EAAAA,EAAAA,KACbpB,EAAAA,EAAAA,KAvBoB,SAACC,GAAD,MAAY,CAChCC,YAAaD,EAAMC,YACnBnE,OAAQkE,EAAMC,YAAYnE,OAC1B8E,iBAAkBZ,EAAMoB,KAAKzB,GAC7BuB,OAAQlB,EAAMoB,KAAKF,WAGI,SAACf,GAAD,MAAe,CACtCU,eAAgB,SAACJ,GACfN,GAASkB,EAAAA,EAAAA,IAA2BZ,KAEtCK,cAAe,SAACL,GACdN,GAASmB,EAAAA,EAAAA,IAA0Bb,KAErChE,aAAc,SAACX,GACbqE,GAASoB,EAAAA,EAAAA,IAAyBzF,KAEpCqC,UAAW,SAACqD,GACVrB,GAASsB,EAAAA,EAAAA,IAAsBD,SAMjCE,EAAAA,EAFF,CAGGlB","sources":["components/Main/Content/Profile/Description/Status/ProfileStatus.jsx","components/Main/Content/Profile/Description/AboutMe/ContactItem/ContactItem.jsx","components/Main/Content/Profile/Description/AboutMe/AboutMe.jsx","components/Main/Content/Profile/Description/Description.jsx","components/Main/Content/Profile/MyPosts/Post/Post.jsx","components/Main/Content/Profile/MyPosts/MyPosts.jsx","components/Main/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Main/Content/Profile/Profile.jsx","components/Main/Content/Profile/ProfileContainer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './ProfileStatus.css';\r\n\r\n\r\nfunction ProfileStatus(props) {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => { \r\n    setStatus(props.status); \r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status) \r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className='App__status-wrapper'>\r\n      {!editMode ?\r\n      <div className='App__profileStatus'>\r\n        { props.isOwner ? <span onDoubleClick={ activateEditMode }>{ props.status || 'No status' }</span> :\r\n        <span>{ props.status || 'No status' }</span> }\r\n        { props.isOwner && <button onClick={ activateEditMode }>Change</button> }\r\n      </div> :\r\n      <div className='status-input'>\r\n        <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={ status }/> \r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport './ContactItem.css';\r\n\r\n\r\nfunction ContactItem (props) {\r\n  return (\r\n    <p>{props.contactTitle}: {props.contactValue}</p>\r\n  )\r\n} \r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ProfileStatus from '../Status/ProfileStatus';\r\nimport './AboutMe.css';\r\nimport ContactItem from './ContactItem/ContactItem';\r\n\r\nfunction AboutMe(props) {\r\n  return (\r\n    <div className='App__description-aboutMeform'>\r\n      <h3 className='App_profile-fullName'>{props.profile.fullName}</h3>\r\n      <ProfileStatus isOwner={props.isOwner} status={props.status} updateStatus={props.updateStatus}/>\r\n      <div className='App__description-aboutMe-list'>\r\n        <div>\r\n          <p className='App__profile-contacts-title'><b>Contacts:</b></p>\r\n          { props.isOwner && <NavLink to='/settings'><p className='App__description-editProfile'>Edit profile</p></NavLink>}\r\n          <div className='App__contacts-list'>\r\n            { Object.keys(props.profile.contacts).map( key => { return <ContactItem key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>}) }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p><b>Looking for a job:</b>{props.profile.lookingForAJob ? 'yes' : 'no'}</p> \r\n        </div>\r\n        <div>\r\n          <p><b>About me:</b></p>{props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n          <p><b>My proffesional skills:</b></p>{props.profile.lookingForAJobDescription}\r\n        </div>   \r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutMe;","import './Description.css';\r\nimport noPhoto from './../../../../../assets/images/no-photo.jpg';\r\nimport AboutMe from './AboutMe/AboutMe';\r\n\r\nfunction Description(props) {\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  return (   \r\n      <>\r\n        <img className='photo' src={props.profile.photos.large || noPhoto} alt=\"#\" />\r\n        {props.isOwner && <input className='input-changePhoto' type='file' onChange={onMainPhotoSelected}/>}\r\n        <AboutMe isOwner={props.isOwner} profile={props.profile}/>\r\n      </>\r\n  )}\r\n\r\nexport default Description;","import React from 'react';\r\nimport './Post.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div> \r\n      <div className='post'>{props.message}</div>\r\n      <div className='likes'>Likes {props.likes}</div>\r\n    </div> \r\n  )}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { MaxLengthCreator, requiredField } from '../../../../../utilities/validators/validators';\r\nimport { FormControl } from '../../../../common/FormControls/FormControls';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\n\r\nfunction MyPosts(props) {\r\n\r\n  const postsItems = props.posts.map((post) => <Post key={post.id} message={post.message} likes = {post.likes}/>)\r\n\r\n  let addPost = (dataFormMessage) => {\r\n    props.addPost(dataFormMessage.post)\r\n  }\r\n\r\n  return (\r\n    <div className='App__posts-info'>\r\n      <div className='App__posts-form'>\r\n        <h3>My posts</h3>    \r\n        <NewPostReduxForm onSubmit={addPost}/>\r\n      </div>\r\n      <div className='App__post-items'>\r\n        {postsItems}\r\n      </div>\r\n    </div> \r\n  )}\r\n\r\n  const maxLength10 = MaxLengthCreator(10)\r\n\r\n  class NewPostForm extends React.Component {\r\n    render() {\r\n      return (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <Field validate={[requiredField, maxLength10]} placeholder={'Enter!'} component={FormControl} formType={'textarea'} type={\"text\"} name={'post'}/>\r\n          <button>Add post</button>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\n  const NewPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n  })(NewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { newPostActionCreator } from '../../../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nclass MyPostsContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <MyPosts  posts={this.props.posts} \r\n                  addPost={this.props.addPost}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n  let mapStateToProps = (state) => {\r\n    return {\r\n      posts: state.dataProfile.dataPosts\r\n    }\r\n  }\r\n  \r\n  let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      addPost: (newPost) => {\r\n        dispatch(newPostActionCreator(newPost))\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);\r\n\r\n ","import React from 'react';\r\nimport './Profile.css';\r\nimport Description from './Description/Description';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nfunction Profile(props) {\r\n  if (!props.dataProfile.profile) {\r\n    return <Preloader/>\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Description saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.dataProfile.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer   dataProfile = {props.dataProfile}/>\r\n    </> \r\n  )}\r\n  \r\nexport default Profile;","import React from 'react';\r\nimport './Profile.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { savePhotoThunkCreator, setUserProfileThunkCreator, setUserStatusThunkCreator, updateStatusThunkCreator } from '../../../../redux/profileReducer';\r\nimport { withRouter } from '../../../../hoc/withRouter';\r\nimport { compose } from 'redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshPage() {\r\n    let profileId = this.props.router.params.profileId;\r\n    if (!profileId) {\r\n      profileId = this.props.authorizedUserId;\r\n    }\r\n    this.props.setUserProfile(profileId)\r\n    this.props.setUserStatus(profileId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshPage()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.router.params.profileId !== this.props.router.params.profileId) {\r\n      this.refreshPage()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if (this.props.authorizedUserId === null) { return <Navigate to='/login'/> }\r\n    return (\r\n    <div className='App__profile'>\r\n      <Profile  dataProfile = {this.props.dataProfile}\r\n                isOwner={Number(this.props.router.params.profileId) === this.props.authorizedUserId}\r\n                savePhoto={this.props.savePhoto}\r\n                isAuth={this.props.isAuth}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}/>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nlet mapStateToProps = (state) => ({\r\n  dataProfile: state.dataProfile,\r\n  status: state.dataProfile.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n  setUserProfile: (profileId) => {\r\n    dispatch(setUserProfileThunkCreator(profileId))\r\n  },\r\n  setUserStatus: (profileId) => {\r\n    dispatch(setUserStatusThunkCreator(profileId))\r\n  },\r\n  updateStatus: (status) => {\r\n    dispatch(updateStatusThunkCreator(status))\r\n  },\r\n  savePhoto: (filePhoto) => {\r\n    dispatch(savePhotoThunkCreator(filePhoto))\r\n  },\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter)\r\n  (ProfileContainer)"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","className","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","isOwner","onDoubleClick","onClick","contactTitle","contactValue","profile","fullName","to","Object","keys","contacts","map","key","lookingForAJob","aboutMe","lookingForAJobDescription","src","photos","large","noPhoto","alt","type","target","files","length","savePhoto","message","likes","maxLength10","MaxLengthCreator","NewPostForm","onSubmit","this","handleSubmit","Field","validate","requiredField","placeholder","component","FormControl","formType","name","React","NewPostReduxForm","reduxForm","form","postsItems","posts","post","id","dataFormMessage","addPost","MyPostsContainer","connect","state","dataProfile","dataPosts","dispatch","newPost","newPostActionCreator","saveProfile","Preloader","ProfileContainer","profileId","router","params","authorizedUserId","setUserProfile","setUserStatus","refreshPage","prevProps","Number","isAuth","compose","auth","setUserProfileThunkCreator","setUserStatusThunkCreator","updateStatusThunkCreator","filePhoto","savePhotoThunkCreator","withRouter"],"sourceRoot":""}