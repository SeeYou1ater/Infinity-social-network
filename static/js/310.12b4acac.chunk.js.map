{"version":3,"file":"static/js/310.12b4acac.chunk.js","mappings":"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","sources":["components/Main/Content/Profile/Description/Status/Status.jsx","components/Main/Content/Profile/Description/Status/StatusWithHooks.jsx","components/Main/Content/Profile/Description/Description.jsx","components/Main/Content/Profile/MyPosts/Post/Post.jsx","components/Main/Content/Profile/MyPosts/MyPosts.jsx","components/Main/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Main/Content/Profile/Profile.jsx","components/Main/Content/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n  state = {\r\n    editStatusMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editStatusMode: true\r\n    })\r\n  }\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editStatusMode: false\r\n    })\r\n    this.props.updateStatus(this.state.status)\r\n  }\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n      <div className='status-wrapper'>\r\n        {!this.state.editStatusMode ?\r\n        <div className='status'>\r\n          <span onDoubleClick={ this.activateEditMode }>{this.props.status || 'No status'}</span>\r\n          <button onClick={ this.activateEditMode }>Change</button>\r\n        </div> :\r\n        <div className='status-input'>\r\n          <input onChange={ this.onStatusChange } autoFocus={true} onBlur={ this.deactivateEditMode } value={ this.state.status }/> \r\n        </div>}\r\n      </div>\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction ProfileStatusWithHooks(props) {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => { \r\n    setStatus(props.status); \r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status) \r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className='status-wrapper'>\r\n      {!editMode ?\r\n      <div className='status'>\r\n        <span onDoubleClick={ activateEditMode }>{ props.status || 'No status' }</span>\r\n        <button onClick={ activateEditMode }>Change</button>\r\n      </div> :\r\n      <div className='status-input'>\r\n        <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={ status }/> \r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport './Description.css';\r\nimport ProfileStatus from './Status/Status';\r\nimport ProfileStatusWithHooks from './Status/StatusWithHooks';\r\n\r\nfunction Description(props) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img className='photo' src={props.profile.photos.large} alt=\"#\" />\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        <div className='profile-description'>Какое то описание профиля</div>\r\n      </div>\r\n    </div>\r\n  )}\r\n\r\nexport default Description;","import React from 'react';\r\nimport './Post.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div> \r\n      <div className='post'>{props.message}</div>\r\n      <div className='likes'>Likes {props.likes}</div>\r\n    </div> \r\n  )}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { MaxLengthCreator, requiredField } from '../../../../../utilities/validators/validators';\r\nimport { FormControl } from '../../../../common/FormControls/FormControls';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\n\r\nfunction MyPosts(props) {\r\n\r\n  const postsItems = props.posts.map((post) => <Post message={post.message} likes = {post.likes}/>)\r\n\r\n  let addPost = (dataFormMessage) => {\r\n    props.addPost(dataFormMessage.post)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='posts'>\r\n        My posts\r\n        <NewPostReduxForm onSubmit={addPost}/>\r\n      </div>\r\n      {postsItems}\r\n    </div> \r\n  )}\r\n\r\n  const maxLength10 = MaxLengthCreator(10)\r\n\r\n  class NewPostForm extends React.Component {\r\n    render() {\r\n      return (\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <Field validate={[requiredField, maxLength10]} placeholder={'Enter!'} component={FormControl} formType={'textarea'} type={\"text\"} name={'post'}/>\r\n          <button>Add post</button>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n\r\n  const NewPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n  })(NewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { newPostActionCreator } from '../../../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nclass MyPostsContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyPosts  posts={this.props.posts} \r\n                  addPost={this.props.addPost}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n  let mapStateToProps = (state) => {\r\n    return {\r\n      posts: state.dataProfile.dataPosts\r\n    }\r\n  }\r\n  \r\n  let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      addPost: (newPost) => {\r\n        dispatch(newPostActionCreator(newPost))\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);\r\n\r\n ","import React from 'react';\r\nimport './Profile.css';\r\nimport Description from './Description/Description';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\nfunction Profile(props) {\r\n  if (!props.dataProfile.profile) {\r\n    return <Preloader/>\r\n  }\r\n  \r\n  return (\r\n    <div className='App__profile'>\r\n      <Description profile = {props.dataProfile.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer   dataProfile = {props.dataProfile}/> \r\n      </div>\r\n  )}\r\n  \r\nexport default Profile;","import React from 'react';\r\nimport './Profile.css';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfileThunkCreator, setUserStatusThunkCreator, updateStatusThunkCreator } from '../../../../redux/profileReducer';\r\nimport { ConnectedWithAuthRedirect } from '../../../../hoc/connectedWithAuthRedirect';\r\nimport { withRouter } from '../../../../hoc/withRouter';\r\nimport { compose } from 'redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let profileId = this.props.router.params.profileId;\r\n    if (!profileId) {\r\n      profileId = this.props.authorizedUserId;\r\n    }\r\n    this.props.setUserProfile(profileId)\r\n    this.props.setUserStatus(profileId)\r\n  }\r\n\r\n  render () {\r\n    if (this.props.authorizedUserId === null) { return <Navigate to='/login'/> }\r\n    return (\r\n    <div className='App__profile'>\r\n      <Profile  dataProfile = {this.props.dataProfile}\r\n                isAuth={this.props.isAuth}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}/>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nlet mapStateToProps = (state) => ({\r\n  dataProfile: state.dataProfile,\r\n  status: state.dataProfile.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n  setUserProfile: (profileId) => {\r\n    dispatch(setUserProfileThunkCreator(profileId))\r\n  },\r\n  setUserStatus: (profileId) => {\r\n    dispatch(setUserStatusThunkCreator(profileId))\r\n  },\r\n  updateStatus: (status) => {\r\n    dispatch(updateStatusThunkCreator(status))\r\n  }\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter)\r\n  //ConnectedWithAuthRedirect\r\n  (ProfileContainer)"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","className","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","onClick","src","profile","photos","large","alt","message","likes","maxLength10","MaxLengthCreator","NewPostForm","onSubmit","this","handleSubmit","Field","validate","requiredField","placeholder","component","FormControl","formType","type","name","NewPostReduxForm","reduxForm","form","postsItems","posts","map","post","dataFormMessage","addPost","MyPostsContainer","connect","state","dataProfile","dataPosts","dispatch","newPost","newPostActionCreator","Preloader","ProfileContainer","profileId","router","params","authorizedUserId","setUserProfile","setUserStatus","to","isAuth","compose","auth","id","setUserProfileThunkCreator","setUserStatusThunkCreator","updateStatusThunkCreator","withRouter"],"sourceRoot":""}